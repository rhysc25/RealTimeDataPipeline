services:
  zookeeper:
    image: zookeeper:3.8
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    ports:
      - "2181:2181" 

  kafka:
    image: confluentinc/cp-kafka:7.4.0
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT
      - KAFKA_INTER_BROKER_LISTENER_NAME=PLAINTEXT
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"

  topic-creator:
    image: confluentinc/cp-kafka:7.4.0
    depends_on:
      - kafka
    command: >
      bash -c "
        sleep 10 &&
        kafka-topics --create --topic market-ticks --bootstrap-server kafka:9092 --partitions 3 --replication-factor 1 --if-not-exists
      "

  database:
    image: postgres:16
    environment:
      POSTGRES_DB: quantdb
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data


  producer:
    build: ./producer
    volumes:
      - ./APIKeys.py:/app/APIKeys.py:ro
    depends_on:
      - topic-creator
    restart: on-failure

  consumer:
    build: ./consumer
    volumes:
      - ./APIKeys.py:/app/APIKeys.py:ro
    depends_on:
      - topic-creator
      - producer
    restart: on-failure

volumes:
  pgdata: {}